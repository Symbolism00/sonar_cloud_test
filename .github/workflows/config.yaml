name: Java CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: "8"
          distribution: "adopt"
          cache: maven

      - name: Install
        run: mvn -f ./backend/backend-spring/pom.xml --batch-mode -DskipTests install
        
      - name: Package
        run: mvn -f ./backend/backend-spring/pom.xml --batch-mode -DskipTests package

      - name: Test
        run: mvn -f ./backend/backend-spring/pom.xml --batch-mode test

  sonarcloud:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Build image docker backend-spring
        uses: actions/checkout@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          
      - name: Install Utilities
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip
      - name: Install AWS Client
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install || true
          aws --version
          curl "https://s3.us-west-2.amazonaws.com/lightsailctl/latest/linux-amd64/lightsailctl" -o "lightsailctl"
          sudo mv "lightsailctl" "/usr/local/bin/lightsailctl"
          sudo chmod +x /usr/local/bin/lightsailctl
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: eu-west-3
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}          
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2      
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: backend/backend-spring/
          file: backend/backend-spring/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/backend-spring:latest

      - name: Push and Deploy
        run: |
          service_name=tamiresviegas/backend-spring
          aws lightsail push-container-image \
            --region eu-west-3 \
            --service-name ${service_name} \
            --label ${service_name} \
            --image ${service_name}:latest
          aws lightsail get-container-images --service-name ${service_name} | jq --raw-output ".containerImages[0].image" > image.txt
          jq --arg image $(cat image.txt) '.containers.app.image = $image' container.template.json > container.json
          aws lightsail create-container-service-deployment --service-name ${service_name} --cli-input-json file://$(pwd)/container.json
